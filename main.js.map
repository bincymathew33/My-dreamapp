{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/approuter.module.ts","webpack:///./src/app/appservice.service.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/components/login/login.component.css","webpack:///./src/app/auth/components/login/login.component.html","webpack:///./src/app/auth/components/login/login.component.ts","webpack:///./src/app/cart/cart.module.ts","webpack:///./src/app/cart/components/cart/cart.component.css","webpack:///./src/app/cart/components/cart/cart.component.html","webpack:///./src/app/cart/components/cart/cart.component.ts","webpack:///./src/app/cart/components/cartdetails/cartdetails.component.css","webpack:///./src/app/cart/components/cartdetails/cartdetails.component.html","webpack:///./src/app/cart/components/cartdetails/cartdetails.component.ts","webpack:///./src/app/components/about/about.component.css","webpack:///./src/app/components/about/about.component.html","webpack:///./src/app/components/about/about.component.ts","webpack:///./src/app/components/details/details.component.css","webpack:///./src/app/components/details/details.component.html","webpack:///./src/app/components/details/details.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/list/list.component.css","webpack:///./src/app/components/list/list.component.html","webpack:///./src/app/components/list/list.component.ts","webpack:///./src/app/reposervice.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./github/github.module\": [\n\t\t\"./src/app/github/github.module.ts\",\n\t\t\"github-github-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"header{\\r\\n  background-color: blue;\\r\\n  border-bottom: 1px solid black;\\r\\n  clear:both;\\r\\n  \\r\\n}\\r\\nnav {\\r\\n    float:right;\\r\\n    margin-right: 20px;\\r\\n}\\r\\nnav ul li{\\r\\n display: inline-block; \\r\\nlist-style: none;\\r\\npadding:10px;\\r\\n}\\r\\nfooter\\r\\n{\\r\\nposition:fixed;\\r\\nbackground-color: greay;\\r\\nbottom :0;\\r\\nheight: 100px;\\r\\n\\r\\n}\"","module.exports = \"<h1>Welcome to my-dream-app! </h1>\\n\\n<header>\\n  Employee Management Syatem\\n  <nav>\\n    <ul>\\n       <li>\\n        <a routerLink=\\\"/\\\">Loged In</a>\\n      </li>\\n      <li>\\n        <a routerLink=\\\"/home\\\">Home</a>\\n      </li>\\n      <li>\\n        <a routerLink=\\\"/github\\\">Github</a>\\n      </li>\\n      <!-- <li>\\n        <a [routerLink]=\\\"['/about/abc']\\\">About</a>\\n      </li> -->\\n      <li>\\n        <a routerLink=\\\"/list\\\">List</a>\\n      </li>\\n      <li>\\n        <a routerLink=\\\"/cartdetails\\\">CartDetails</a>\\n      </li>\\n    </ul>\\n  </nav>\\n  \\n  <div style=\\\"clear:both\\\"></div>\\n \\n</header>\\n  <section style=\\\"clear:both; position:fixed;margin-top: 20px\\\">\\n    This is the content area\\n    <!-- <app-cart></app-cart>\\n    <button (click)=\\\"logedIn()\\\">LogedIn</button> -->\\n    <router-outlet></router-outlet>\\n   <!-- <app-home [resvalue]=\\\"repository\\\" (output)=\\\"selectedvalue($event)\\\"></app-home> -->\\n    <!-- <div *ngFor='let resp of repository'>\\n      {{resp}}\\n    </div> -->\\n    <!-- <input [(ngModule)]=\\\"myprop\\\"/>\\n    {{myprop}} -->\\n  </section>\\n<footer>\\nthis is footer\\n</footer>\\n\\n\"","import { Component,OnInit } from '@angular/core';\r\nimport { ReposerviceService } from './reposervice.service';\r\nimport {IRepoResponse,IRepo} from './models/repo';\r\nimport { AppserviceService } from './appservice.service';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'my-dream-app';\r\n  repository:IRepo[];\r\n  myprop:string;\r\n  newprop:string;\r\n  retrivevalue:string;\r\n  constructor(private resposiveservice:ReposerviceService,private service:AppserviceService  )\r\n  {\r\n\r\n  }\r\n  ngOnInit()\r\n {\r\n \r\n//  this.resposiveservice.getRepository().subscribe((repositoryread:IRepoResponse)=>\r\n//  {\r\n  \r\n\r\n//  this.repository=repositoryread.items;\r\n\r\n  \r\n//  });\r\n}\r\nlogedIn(){\r\n  this.service.logedIn();\r\n}\r\nselectedvalue(txtvalue){\r\n alert(txtvalue);\r\n}\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule, Routes, ROUTES} from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { ListComponent } from './components/list/list.component';\nimport { ApprouterModule } from './approuter.module';\nimport { FormsModule } from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport { DetailsComponent } from './components/details/details.component';\nimport {CartModule} from './cart/cart.module';\nimport {AuthModule} from './auth/auth.module';\n\n// const route :Routes = [{\n//   path:'about',\n//   component:AboutComponent\n// },\n// {\n//   path:'',\n//   component:HomeComponent,\n//   pathMatch:'full'\n// },\n// {\n//   path:'list',\n//   component:ListComponent\n// }\n// ];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AboutComponent,\n    ListComponent,\n    DetailsComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    // RouterModule.forRoot(route),\n    ApprouterModule,\n    HttpClientModule,\n    FormsModule,\n    CartModule,\n    AuthModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\n\nimport {RouterModule, Routes, ROUTES} from '@angular/router';\n\nimport { HomeComponent } from './components/home/home.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { ListComponent } from './components/list/list.component';\nimport { DetailsComponent } from './components/details/details.component';\nimport { CartdetailsComponent } from './cart/components/cartdetails/cartdetails.component';\nimport {AuthGuard} from './auth.guard';\nimport { LoginComponent } from './auth/components/login/login.component';\nconst route :Routes = [{\n  path:'about/:itemid',\n  component:AboutComponent\n},\n{\n  path:'home',\n  component:HomeComponent,\n  \n},\n{\n  path:'list',\n  component:ListComponent\n},\n{\npath:'',\ncomponent:LoginComponent,\npathMatch:'full'\n},\n{\n  path:'cartdetails',\n  data:{\nrole:'user'\n  },\n  canActivate:[AuthGuard],\n  component:CartdetailsComponent\n  \n},\n{\n  path:'github',\n  loadChildren:'./github/github.module#GithubModule'\n},\n{\n  path:'userdetails/:userid',\n  component:DetailsComponent\n},\n\n];\n@NgModule({\n  imports: [\n    RouterModule.forRoot(route), \n    \n  ],\n  exports:[\n    RouterModule\n  ]\n \n})\nexport class ApprouterModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppserviceService {\nlogedin:boolean=false;\n  constructor() { }\n  logedIn()\n  {\nthis.logedin=true;\n  }\n  IsLogedIn()\n  {\nreturn this.logedin;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth/auth.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private service:AuthService){\n\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      \n      const IslogedIn=this.service.isLogedIn;\n    if(IslogedIn && next.data.role==this.service.userdetails.role )\n{\nreturn true;\n}\n    return false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './components/login/login.component';\nimport { FormsModule } from '@angular/forms';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [LoginComponent]\n})\nexport class AuthModule { }\n","import { Injectable } from '@angular/core';\nimport { LoginComponent } from './components/login/login.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\nisLogedIn:boolean=false;\nIsnormaluser:boolean=false;\nIsAdminuser:boolean=false;\nuserdetails=null;\n  constructor() { }\n  users=[{\n    username:'Bincy',\n    password:'123',\n    role:'user'\n\n  },\n  {\n    username:'Merin',\n    password:'123',\n    role:'admin'\n  }\n  \n]\nlogin(username,password){\n \n    const userFound = this.users.find(u => {\n      return u.username === username && u.password === password\n     });\n     \n     if(userFound){\n      this.isLogedIn = true; \n      this.userdetails=userFound;\n      return this.isLogedIn;\n     } \n     else\n     {\n      this.isLogedIn = false; \n      return this.isLogedIn;\n     } \n     if(userFound.username==='Bincy'){\n  this.Isnormaluser=true;\n     }\n     if(userFound.username==='Merin'){\n      this.IsAdminuser=true;\n         }\n}\n}","module.exports = \"\"","module.exports = \"<H2>Login form</H2>\\n<div class=\\\"container\\\" >\\n    <!-- <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-4\\\"> -->\\n<form #myform=\\\"ngForm\\\" name=\\\"LoginForm\\\" (ngSubmit)=\\\"myformsubmit(myform)\\\">\\n  <div>\\n    Username:<input ngModel #username type=\\\"text\\\" name=\\\"Username\\\" required minlength=\\\"2\\\"/>\\n    <div *ngIf=\\\"username.invalid\\\" && username.dirty>\\n      <span *ngIf=\\\"username.errors.required\\\">This field is required</span>\\n      <span *ngIf=\\\"username.errors.minlength\\\">\\n        This field required{{username.errors.minlength.requiredlength}} charactors\\n      </span>\\n    </div>\\n  </div>\\n  <div style=\\\"clear:both\\\">&nbsp;</div>\\n\\n  <div>\\n    Password:<input ngModel type=\\\"password\\\" name=\\\"Password\\\"/>\\n  </div>\\n  &nbsp;\\n  <div style=\\\"text-align:center \\\">\\n    <input type=\\\"submit\\\" value=\\\"Submit\\\" name=\\\"Submit\\\"/> \\n  </div>\\n  \\n</form>\\n<!-- </div>\\n</div> -->\\n<p>\\n  <!-- {{myform.value.Username | json }}\\n  {{myform.value.Password | json }} -->\\n  <span *ngIf='Loggedinsucces===\\\"success\\\"'>\\nYou Successfully logedin\\n  </span>\\n  <span *ngIf='Loggedinsucces ==\\\"failed\\\"'>\\n    Logged in fail\\n  </span>\\n</p>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService} from '../../auth.service';\nimport {Router} from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\nLogedIn:boolean;\nLoggedinsucces:string;\n\n  constructor(private service:AuthService, private router:Router) { }\n\n  ngOnInit() {\n\n  }\n  myformsubmit(myform){\n    this.LogedIn=this.service .login (myform.value.Username,myform.value.Password);\n    if(this.LogedIn===true){\n      this.Loggedinsucces='success';\n      this.router.navigateByUrl('/cartdetails');\n    }\nelse{\n  this.Loggedinsucces='failed';\n}\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CartComponent } from './components/cart/cart.component';\nimport { CartdetailsComponent } from './components/cartdetails/cartdetails.component';\n\n@NgModule({\n  declarations: [CartComponent, CartdetailsComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    CartComponent\n  ]\n \n})\nexport class CartModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  o items selected\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  cartdetails works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cartdetails',\n  templateUrl: './cartdetails.component.html',\n  styleUrls: ['./cartdetails.component.css']\n})\nexport class CartdetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n <!-- <input   [(ngModule)]=\\\"myvalue\\\"/>\\n {{myvalue}}\\n <a [routerLink]=\\\"['/about',myvalue]\\\">About</a> -->\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n  myvalue:string;\n  constructor(private route:ActivatedRoute) { }\n\n  ngOnInit() {\n  //  const itemid= this.route.snapshot.paramMap.get('itemid');\n  //   console.log(itemid);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<table>\\n  <tr >\\n   \\n    <td >\\n    \\n      {{userdetail.followers_url}}\\n          </td>\\n          <td>\\n            {{userdetail.subscriptions_url}} \\n           </td>\\n           <td>\\n            {{userdetail.repos_url}} \\n           </td>\\n        </tr>\\n</table>\\n<h1>this is cartdettails</h1>\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport { ReposerviceService } from '../../reposervice.service';\nimport {IRepoResponse,IRepo} from '../../models/repo';\nimport {IUser} from '../../models/user';\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\nexport class DetailsComponent implements OnInit \n{\n  repository:IRepo[];\n  userdetail:IUser;\n  constructor(private route:ActivatedRoute ,private service:ReposerviceService) { }\n \n \n  ngOnInit() {\n   const userid= this.route.snapshot.paramMap.get('userid');\n   this.service.getUserDetails(userid).subscribe((userread:IUser)=>\n  {\n  \n   \n this.userdetail=userread;\n \n   \n  });\n  }\n\n}\n","module.exports = \".row{\\r\\n    clear:both;\\r\\n    width:100%;\\r\\n    max-width:500px ;\\r\\n    \\r\\n   \\r\\n}\\r\\n.alighn{\\r\\n    max-width: 100px;\\r\\n    width:50%;\\r\\n    margin: 20px;\\r\\n    float:left;\\r\\n    \\r\\n}\\r\\n.active\\r\\n{\\r\\nbackground-color: green;\\r\\nfont:bold;\\r\\ncolor: white;\\r\\n}\"","module.exports = \"\\n\\n<div>\\n<input type=\\\"text\\\" #myinput/>\\n\\n<button [ngClass]=\\\"{'active':activeindex==='users'}\\\" (click)=\\\"userclick(myinput.value,'users')\\\"  >Users </button>&nbsp;&nbsp;\\n<button [ngClass]=\\\"{'active':activeindex==='repo'}\\\" (click)=\\\"repoclick(myinput.value,'repo')\\\" >Repository</button>\\n</div>\\n<!-- <div class=\\\"row\\\">\\n  <div class=\\\"alighn\\\">\\n  [ngClass]=\\\"{'active':activeindex === 0}\\\"\\n  [ngClass]=\\\"{'active':activeindex === 1}\\\"\\n    <button (click)=\\\"userclick(myinput.value)\\\"  >Users </button><div>\\n        <button (click)=\\\"repoclick(myinput.value)\\\" >Repository</button>\\n  </div>\\n  <div class=\\\"alighn\\\">\\n  \\n    \\n    </div> -->\\n<div *ngIf=\\\"activeindex==='repo'\\\">\\n<table>\\n \\n  <tr *ngFor=\\\"let res of repository\\\">\\n   \\n  \\n          <!-- <td >\\n    \\n            {{res.full_name}}\\n                </td> -->\\n<td>\\n                {{res.owner.login}}\\n              </td>\\n              <td><button>Repodetails</button></td> \\n  </tr>\\n</table>\\n</div>\\n\\n<div *ngIf=\\\"activeindex==='users'\\\">\\n<table>\\n    <tr *ngFor=\\\"let res of users\\\">\\n     \\n      <td >\\n      \\n        {{res.login}}\\n            </td>\\n         <td>\\n           <a [routerLink]=\\\"['/userdetails',res.login]\\\" >ViewDetails</a>\\n         </td></tr>\\n  </table>\\n</div>\"","import { Component, OnInit,Input,Output,EventEmitter } from '@angular/core';\nimport { ReposerviceService } from '../../reposervice.service';\nimport {IRepoResponse,IRepo} from '../../models/repo';\nimport {IUser} from '../../models/user';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\ninputvalue:string;\nrepository:IRepo[];\nusers:IRepo[];\nactiveindex:'users';\n\n\n  constructor(private service:ReposerviceService) {\n\n   }\n\n  ngOnInit() {\n    \n  }\n@Input()\nresvalue:any;\n\n@Output()\noutput:EventEmitter<string>=new EventEmitter<string>();\nuserclick(txtvalue,users){\n  this.activeindex=users;\n  this.service.getUsers(txtvalue).subscribe((userread:IRepoResponse)=>\n  {\n   \n \n  this.users=userread.items;\n \n   \n  });\n}\nrepoclick(txtvalue,repo){\n  this.activeindex=repo;\n  this.service.searchrepository(txtvalue).subscribe((repositoryread:IRepoResponse)=>\n  {\n   \n \n  this.repository=repositoryread.items;\n \n   \n  });\n}\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\nhello list\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  selectedvalue(btnvalue){\nalert(btnvalue);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable,combineLatest,Subject } from 'rxjs';\nimport {IRepoResponse,IRepo} from './models/repo';\nimport {IUser} from './models/user';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReposerviceService {\n  \n  constructor(private http:HttpClient) { }\n  getUsers(txtvalue):Observable<IRepoResponse>{\n    return this.http.get<IRepoResponse>('https://api.github.com/search/users?q='+txtvalue);\n  }\n searchrepository(txtvalue):Observable<IRepoResponse>{\n    return this.http.get<IRepoResponse>('https://api.github.com/search/repositories?q='+txtvalue);\n\n  }\n  getUserDetails(txtvalue):Observable<IUser>{\n    return this.http.get<IUser>('https://api.github.com/users/'+txtvalue);\n  }  \n  }\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}